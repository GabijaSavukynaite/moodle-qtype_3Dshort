{"version":3,"sources":["../src/model.js"],"names":["init","id","resourceobject","inputname","console","log","node","document","createElement","textnode","createTextNode","appendChild","button","getElementById","window","addEventListener","iframe","innerDoc","contentDocument","contentWindow","container","setAttribute","getAnswers","answers","answersInput","value","val"],"mappings":"sJA8BA,uD,OAEoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAKC,CAAL,CAAqBC,CAArB,CAAmC,CACrDC,OAAO,CAACC,GAAR,CAAY,OAASH,CAArB,EADqD,GAEjDI,CAAAA,CAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAF0C,CAGnDC,CAAQ,CAAGF,QAAQ,CAACG,cAAT,CAAwB,OAAxB,CAHwC,CAIvDN,OAAO,CAACC,GAAR,CAAYI,CAAZ,EACAH,CAAI,CAACK,WAAL,CAAiBF,CAAjB,EACC,GAAMG,CAAAA,CAAM,CAAGL,QAAQ,CAACM,cAAT,CAAwBZ,CAAxB,CAAf,CAECa,MAAM,CAACC,gBAAP,CAAwB,MAAxB,CAAgC,UAAW,IACnCC,CAAAA,CAAM,CAAGT,QAAQ,CAACM,cAAT,CAAwBX,CAAxB,CAD0B,CAEnCe,CAAQ,CAAGD,CAAM,CAACE,eAAP,EAA0BF,CAAM,CAACG,aAAP,CAAqBZ,QAFvB,CAGnCa,CAAS,CAAGH,CAAQ,CAACJ,cAAT,CAAwB,gBAAxB,CAHuB,CAczCD,CAAM,CAACS,YAAP,CACE,OADF,CAEE,gQAFF,EAKAT,CAAM,CAACG,gBAAP,CAAwB,OAAxB,CAAiC,UAAO,CACtCX,OAAO,CAACC,GAAR,CAAY,MAAZ,EADsC,GAGlCiB,CAAAA,CAAU,CAAGF,CAAS,CAACE,UAHW,CAIlCC,CAAO,CAAGD,CAAU,EAJc,CAqBhCE,CAAY,CAAGjB,QAAQ,CAACM,cAAT,CAAwBV,CAAxB,CArBiB,CAsBtCqB,CAAY,CAACC,KAAb,CAAqBF,CAEtB,CAxBD,CAyBD,CA5CD,CAkFD,C,OAEoB,QAANG,CAAAA,GAAM,EAAc,CAACtB,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAoB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * model3d setup the ES6 javascript for the question type\r\n * https://docs.moodle.org/dev/Javascript_Modules#ES6_Modules_.28Moodle_v3.8_and_above.29\r\n *\r\n * @package    qtype\r\n * @subpackage model3d\r\n * @copyright  THEYEAR YOURNAME (YOURCONTACTINFO)\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n/**\r\n * Set up the plugin.\r\n *\r\n * @method init\r\n */\r\n\r\nimport Ajax from \"core/ajax\";\r\n\r\nexport const init = (id, resourceobject, inputname) => {\r\n  console.log(\"test\" + resourceobject )\r\n  var node = document.createElement(\"LI\");                 // Create a <li> node\r\nvar textnode = document.createTextNode(\"Water\");   \r\nconsole.log(textnode)      // Create a text node\r\nnode.appendChild(textnode);   \r\n const button = document.getElementById(id)\r\n\r\n  window.addEventListener(\"load\", (event) => {\r\n    const iframe = document.getElementById(resourceobject);\r\n    const innerDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n    const container = innerDoc.getElementById(\"rendererCanvas\");\r\n\r\n\r\n//     const button = document.getElementById(\"saveGrade\");\r\n//     buttonShort.style.width = '200px'; // setting the width to 200px\r\n// buttonShort.style.height = '200px'; // setting the height to 200px\r\n// buttonShort.style.background = 'teal'; // setting the background color to teal\r\n// modelContainer\r\n\r\n\r\n\r\n    button.setAttribute(\r\n      \"style\",\r\n      \"display:inline-block; padding:0.3em 1.2em; margin:0 0.3em 0.3em 0;border-radius:2em;box-sizing: border-box;text-decoration:none;font-family:'Roboto',sans-serif;font-weight:300;color:#FFFFFF;background-color:#4eb5f1;text-align:center;transition: all 0.2s;\"\r\n    );\r\n\r\n    button.addEventListener(\"click\", (e) => {\r\n      console.log(\"test\")\r\n          \r\n    const getAnswers = container.getAnswers;\r\n    const answers = getAnswers();\r\n      // e.prenventDefault();\r\n      // const answers = [];\r\n      // scene.traverse(function (child) {\r\n      //   if (child.name === \"draggable\") {\r\n      //     child.material.color.set(\"#fff\");\r\n      //     answers.push({\r\n      //       id: child.id,\r\n      //       position: {\r\n      //         x: child.position.x.toFixed(2),\r\n      //         y: child.position.y.toFixed(2),\r\n      //         z: child.position.z.toFixed(2),\r\n      //       },\r\n      //     });\r\n      //   }\r\n      // });\r\n\r\n      const answersInput = document.getElementById(inputname);\r\n      answersInput.value = answers;\r\n    \r\n    });\r\n  });\r\n\r\n\r\n\r\n  // export const displayCorrectAnswers = (answers) => {};\r\n\r\n  //   var promises = Ajax.call(\r\n  //     [\r\n  //       {\r\n  //         methodname: \"qtype_model3d_get_grade\",\r\n  //         args: { edugameid: 1, score: 2 },\r\n  //       },\r\n  //     ],\r\n  //     true\r\n  //   );\r\n  //   promises[0]\r\n  //     .done(function (test) {\r\n  //       console.log(test);\r\n  //       console.log(\"success\");\r\n  //     })\r\n  //     .fail(function (response) {\r\n  //       console.log(response);\r\n  //     });\r\n  // });\r\n\r\n  // export const init = () => {\r\n  //     var promises = Ajax.call([{\r\n  //         methodname: 'qtype_model3d_get_grade',\r\n  //         args: { edugameid: 1, score: 2 },\r\n  //     }], true);\r\n  //     promises[0]\r\n  //         .done(function() {\r\n  //             console.log(\"success\")\r\n  //         })\r\n  //         .fail(function(response) {\r\n  //             console.log(\"fail\")\r\n  //         });\r\n  // }\r\n};\r\n\r\n  export const val = (canvasId) => {console.log(\"val\") }\r\n"],"file":"model.min.js"}